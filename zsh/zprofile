#!/usr/bin/env zsh
#
# The ~/.zprofile file is a configuration file for the Z shell (zsh) that is
# sourced (executed) when you log in to the system. It is used to define
# settings, aliases, and functions that should be set when you log in to the
# system.
#
# This file should not contain commands, options, or keybindings that produce
# output or modify the shell. It is intended to be used to set environment
# variables, aliases, functions, and commands. Options and keybindings should
# be set in the ~/.zshrc file.
#
# To use the ~/.zprofile file, you can create a symlink to the file in your
# home directory using the ln command:
#
#   ln -s path/to/dotfiles/zsh/zprofile ~/.zprofile
#



################################################################################
# Environment
################################################################################
export HOSTNAME=$(uname -n)

################################################################################
# Homebrew
################################################################################
#
# Homebrew is a package manager for macOS and Linux.
# This section initializes Homebrew if it's installed.
#
# On macOS, Homebrew is typically installed in /opt/homebrew (Apple Silicon)
# or /usr/local (Intel). On Linux, it's typically in /home/linuxbrew/.linuxbrew
# or ~/.linuxbrew.
#
if [[ "$OSTYPE" == "darwin"* ]]; then
    # macOS - check both possible Homebrew locations
    if [[ -x "/opt/homebrew/bin/brew" ]]; then
        eval "$(/opt/homebrew/bin/brew shellenv)"
    elif [[ -x "/usr/local/bin/brew" ]]; then
        eval "$(/usr/local/bin/brew shellenv)"
    fi
elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
    # Linux - check both possible Homebrew locations
    if [[ -x "/home/linuxbrew/.linuxbrew/bin/brew" ]]; then
        eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
    elif [[ -x "$HOME/.linuxbrew/bin/brew" ]]; then
        eval "$($HOME/.linuxbrew/bin/brew shellenv)"
    fi
fi

################################################################################
# pyenv
################################################################################
#
# This is the recommended way to set up Pyenv in your shell.
#
# bash
# https://github.com/pyenv/pyenv/issues/1906#issuecomment-835027647
#
# zsh
# https://github.com/pyenv/pyenv/issues/1906#issuecomment-839556656
#
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init --path)"
fi

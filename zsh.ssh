function printrow() {
  if [ ${#1} -ne 0 ]; then
    dotline=`for i in {${#1}..19}; do printf "."; done`
  else
    dotline="                    "
  fi
  endspaces=`for i in {${#2}..54}; do printf " "; done`
  printf "|  %s%s %s%s|\n" "$1" $dotline "$2" $endspaces
}

function printrowstart() {
  if [ ${#1} -ne 0 ]; then
    dotline=`for i in {${#1}..19}; do printf "."; done`
  else
    dotline="                    "
  fi
  printf "|  %s%s " "$1" $dotline
}

function printrowend() {
  endspaces=`for i in {${#1}..54}; do printf " "; done`
  printf "%s%s|\n" "$1" $endspaces
}

function printtablerowintend() {
  value=`printf " %05s%s    %04s%s    %05s%s " $1 $4 $2 $4 $3 $4`
  printrowend $value
}

function printtablerowfloatend() {
  value=`printf " %5.1f%s    %4.1f%s    %5.1f%s " $1 $4 $2 $4 $3 $4`
  printrowend $value
}

function printtableborderrow() {
 # printf "|  ----------------------------------------                                    |\n"
}

function printtableheaderrow() {
  printrow "" "  Free     Used     Total"
  printrow "" "----------------------------"
}

function printtablerowint() {
  value=`printf " %05s%s    %04s%s    %05s%s " $2 $5 $3 $5 $4 $5`
  printrow $1 $value
}

function printtablerowfloat() {
  value=`printf " %5.1f%s    %4.1f%s    %5.1f%s " $2 $5 $3 $5 $4 $5`
  printrow $1 $value
}

function printtablerowseparator() {
  #printf "|   --------|--------|--------|-----------                                     |\n"
}

function printemptyrow() {
  printf "|%78s|\n"
}

function printborderrow() {
  printf "--------------------------------------------------------------------------------\n"
}

function localip() {
  header=`/sbin/ifconfig | grep $1`
  if [ ${#header} -ne 0 ]; then
    ip=`/sbin/ifconfig $1 | /bin/grep "inet addr" | /usr/bin/cut -d ":" -f 2 | /usr/bin/cut -d " " -f 1`
  fi
    if test -n "$ip"; then
      echo $ip
    else
      echo "N/A"
    fi
}

#################################
## OS/Arch
#################################
function printosarchrow() {
  printrowstart "Kernel"
  STOOOOPS_KERNEL=`uname -sr`
  printrowend $STOOOOPS_KERNEL

  printrowstart "Architecture"
  STOOOOPS_ARCHITECTURE=`uname -m`
  printrowend $STOOOOPS_ARCHITECTURE


  printrowstart "Operating System"
  STOOOOPS_OS=`uname -o`
  printrowend $STOOOOPS_OS
}

#################################
## Network
#################################
function printnetworkrow() {  
  printrowstart "Public IP Address"
  STOOOOPS_NETWORK_PUBLIC_IP=`curl -s icanhazip.com`
  printrowend $STOOOOPS_NETWORK_PUBLIC_IP

  printrowstart "Local etho0 IP"
  STOOOOPS_NETWORK_LOCAL_IP_ETH0=`localip eth0`
  printrowend $STOOOOPS_NETWORK_LOCAL_IP_ETH0

  printrowstart "Local wlan0 IP"
  STOOOOPS_NETWORK_LOCAL_IP_WLAN0=`localip wlan0`
  printrowend $STOOOOPS_NETWORK_LOCAL_IP_WLAN0
}

#################################
## Memory
#################################
function printmemorytablerow() {
  printrowstart "Memory"
  STOOOOPS_MEMORY_FREE_KB=`cat /proc/meminfo | grep MemFree | awk {'print $2'}`
  STOOOOPS_MEMORY_TOTAL_KB=`cat /proc/meminfo | grep MemTotal | awk {'print $2'}`
  STOOOOPS_MEMORY_USED_KB=$(($STOOOOPS_MEMORY_TOTAL_KB - $STOOOOPS_MEMORY_FREE_KB))
  STOOOOPS_MEMORY_FREE_M=$(($STOOOOPS_MEMORY_FREE_KB / 1000))
  STOOOOPS_MEMORY_TOTAL_M=$(($STOOOOPS_MEMORY_TOTAL_KB / 1000))
  STOOOOPS_MEMORY_USED_M=$(($STOOOOPS_MEMORY_USED_KB / 1000))
  printtablerowintend $STOOOOPS_MEMORY_FREE_M $STOOOOPS_MEMORY_USED_M $STOOOOPS_MEMORY_TOTAL_M "M"
}

#################################
## Swap
#################################
function printswaptablerow() {
  printrowstart "Swap"
  read ignoretoken STOOOOPS_SWAP_TOTAL_KB STOOOOPS_SWAP_USED_KB STOOOOPS_SWAP_FREE_KB < \
      <(free -k | tail -n 1)
  read ignoretoken STOOOOPS_SWAP_TOTAL_M STOOOOPS_SWAP_USED_M STOOOOPS_SWAP_FREE_M < \
      <(free -m | tail -n 1)
  printtablerowintend $STOOOOPS_SWAP_FREE_M $STOOOOPS_SWAP_USED_M $STOOOOPS_SWAP_TOTAL_M "M"
}

#################################
## Disk
#################################
function printdisktablerow() {
  printrowstart "Disk"
  STOOOOPS_DISK_USED_K=`df / | awk '{ a = $3 } END { print a }'`
  STOOOOPS_DISK_TOTAL_K=`df / | awk '{ a = $4 } END { print a }'`
  STOOOOPS_DISK_FREE_K=$(($STOOOOPS_DISK_TOTAL_K - $STOOOOPS_DISK_USED_K))
  STOOOOPS_DISK_FREE_M=$(($STOOOOPS_DISK_FREE_K / 1024))
  STOOOOPS_DISK_TOTAL_M=$(($STOOOOPS_DISK_TOTAL_K / 1024))
  STOOOOPS_DISK_USED_M=$(($STOOOOPS_DISK_USED_K / 1024))
  STOOOOPS_DISK_FREE_G=$((1.0 * $STOOOOPS_DISK_FREE_M / 1024.0))
  STOOOOPS_DISK_TOTAL_G=$((1.0 * $STOOOOPS_DISK_TOTAL_M / 1024.0))
  STOOOOPS_DISK_USED_G=$((1.0 * $STOOOOPS_DISK_USED_M / 1024.0))
  printtablerowfloatend $STOOOOPS_DISK_FREE_G $STOOOOPS_DISK_USED_G $STOOOOPS_DISK_TOTAL_G "G"
}

#################################
## Date/Time
#################################
function printdatetimerow() {
  # Time
  printrowstart "Time"
  STOOOOPS_DATE=`date +"%Y-%m-%e"`
  STOOOOPS_TIME=`date +"%R (%:z)"`
  printrowend "$STOOOOPS_DATE $STOOOOPS_TIME"

  # Uptime
  printrowstart "Uptime"
  let upSeconds="$(/usr/bin/cut -d. -f1 /proc/uptime)"
  let secs=$((${upSeconds}%60))
  let mins=$((${upSeconds}/60%60))
  let hours=$((${upSeconds}/3600%24))
  let days=$((${upSeconds}/86400))
  STOOOOPS_UPTIME=`printf "%d days, %02d:%02d:%02d" "$days" "$hours" "$mins" "$secs"`
  printrowend $STOOOOPS_UPTIME
}

#################################
## Info
#################################
function printinforow() {
  printrowstart "User"
  STOOOOPS_USER=`whoami`
  printrowend "User" $STOOOOPS_USER

  printrowstart "Host"
  STOOOOPS_HOST=`hostname` 
  printrowend $STOOOOPS_HOST
}

#################################
## Processes
#################################
function printprocessesrow() {
  printrowstart "Processes"
  STOOOOPS_PROCESSES_RUNNING=`ps ax | wc -l | tr -d " "`
  printrowend $STOOOOPS_PROCESSES_RUNNING
}

#################################
## Load Averages
#################################
function printloadaveragesrow() {
  printrowstart "LoadAverage 1m"
  read STOOOOPS_LOAD_1 STOOOOPS_LOAD_5 STOOOOPS_LOAD_15 rest < /proc/loadavg
  printrowend $STOOOOPS_LOAD_1
  printrow "Load Average 5m" $STOOOOPS_LOAD_5
  printrow "Load Average 15m" $STOOOOPS_LOAD_15
}

#################################
## Weather
#################################
function printweatherrow() {
  printrowstart "Weather"
  STOOOOPS_WEATHER_URL="http://www.accuweather.com/en/us/seattle-wa/98104/weather-forecast/351409"
  STOOOOPS_WEATHER_WGET=`wget -q -O- $STOOOOPS_WEATHER_URL`
  STOOOOPS_WEATHER=` echo $STOOOOPS_WEATHER_WGET | awk -F\' '/acm_RecentLocationsCarousel\.push/{print $12"°F "$16}' | head -n 1`
  DEGREE_SYMBOL="°"
  if [ ${#DEGREE_SYMBOL} -eq 2 ]; then
    endspaces=`for i in {${#STOOOOPS_WEATHER}..54}; do printf " "; done`
    printf "%s%s |\n" "$STOOOOPS_WEATHER" $endspaces
  else
    printrowend $STOOOOPS_WEATHER
  fi
}

#################################
## Stats
#################################
function stats() {
  printborderrow
  printemptyrow

  # Info
  printinforow
  printemptyrow

  # Date/Time
  printdatetimerow
  printemptyrow

  # Network
  printnetworkrow
  printemptyrow

  # OS/Arch
  printosarchrow
  printemptyrow

  # Memory/Swap/Disk Table
  printtableborderrow
  printtableheaderrow

  printmemorytablerow
  printtablerowseparator

  printswaptablerow
  printtablerowseparator

  printdisktablerow

  printtableborderrow
  printemptyrow

  printprocessesrow
  printloadaveragesrow
  printemptyrow

  printweatherrow

  printemptyrow
  printborderrow
}


stats


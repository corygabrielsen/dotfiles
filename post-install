#!/usr/bin/env bash

set -o errexit
set -o nounset
set -x


# Upgrade
sudo apt-get update -y
sudo apt-get upgrade -y
sudo apt-get dist-upgrade -y
sudo apt-get autoremove -y


# Basic utilities
sudo apt-get install -y \
  ack \
  curl \
  git \
  jq \
  tmux \
  vim

##################################################################
# Install OpenSSH
sudo apt-get install -y openssh-server

# Enable firewall
sudo ufw enable
# Allow OpenSSH
sudo ufw allow OpenSSH

# Generate SSH key - https://unix.stackexchange.com/a/135090 comments
SSH_KEY_FILE=${HOME}/.ssh/id_rsa
yes "" | ssh-keygen -N "" -f ${SSH_KEY_FILE} >&- 2>&- || echo "ssh key ${SSH_KEY_FILE} already exists"
cat ${SSH_KEY_FILE}.pub
# Upload key to GitHub
read -p "Uploaded ssh key to GitHub? " -n 1 -r
echo    # (optional) move to a new line
if [[ ! $REPLY =~ ^[Yy]$ ]]
then
    [[ "$0" = "$BASH_SOURCE" ]] && exit 1 || return 1 # handle exits from shell or function but don't exit interactive shell
fi

##################################################################



##################################################################
# zsh
sudo apt-get install -y zsh

# Dotfiles
mkdir -p ~/dev
pushd ~/dev
rm -rf dotfiles && git clone --recursive git@github.com:stoooops/dotfiles.git
pushd dotfiles
./install-symlinks
popd
popd

# configure local settings
echo "[user]
    email = corygabrielsen@gmail.com
" > ~/.gitconfig.local

# change shell, restart shell
sudo chsh -s /usr/bin/zsh ${USER}
# Restart user to apply new shell
# su - ${USER}
##################################################################


##################################################################
# DOCKER
# Next, install a few prerequisite packages which let apt use packages over HTTPS:
sudo apt install -y apt-transport-https ca-certificates curl software-properties-common
# Then add the GPG key for the official Docker repository to your system:
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
# Add the Docker repository to APT sources:
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
sudo apt update -y

# Display docker to be downloaded
apt-cache policy docker-ce

# Install docker
sudo apt install -y docker-ce
sudo systemctl status --no-pager -l docker

# Add user to docker group
sudo usermod -aG docker ${USER}
# Restart to apply
# su - ${USER}
# Show groups
# id -nG
##################################################################



##################################################################
# Chrome
pushd ~/Downloads
wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
sudo apt install ./google-chrome-stable_current_amd64.deb
popd
##################################################################



#################################################################
sudo apt-get install -y gimp
sudo apt-get install -y kazam
sudo apt-get install -y nautilus-dropbox
sudo apt-get install -y unrar zip unzip
sudo apt-get install -y virtualbox
sudo apt-get install -y vlc

# Shutter
sudo add-apt-repository -y ppa:linuxuprising/shutter
sudo apt install -y shutter
#################################################################



##################################################################
# Snap apps
sudo snap install atom                 --classic  # Atom
sudo snap install code                 --classic  # VS code
sudo snap install pycharm-professional --classic  # PyCharm
sudo snap install slack                --classic  # Slack
sudo snap install spotify                         # Spotify
sudo snap install sublime-text         --classic  # Sublime Text 3
##################################################################

# pyenv
sudo apt-get install -y \
    build-essential \
    curl \
    libbz2-dev \
    libffi-dev \
    liblzma-dev \
    libncurses5-dev \
    libncursesw5-dev \
    libreadline-dev \
    libsqlite3-dev \
    libssl-dev \
    llvm \
    make \
    tk-dev \
    wget \
    xz-utils \
    zlib1g-dev
[ -d $HOME/.pyenv ] || curl -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bash

# Restart user to apply new shell
su - ${USER}
